--source include/have_rocksdb.inc

--disable_warnings
DROP TABLE IF EXISTS t1, t2;
--enable_warnings

CREATE TABLE t1 (b INT PRIMARY KEY);

# Try foreign key with cascade on delete and cascade on update
CREATE TABLE t2 (a INT NOT NULL, b INT NOT NULL, FOREIGN KEY (b) REFERENCES t1(b) ON UPDATE CASCADE ON DELETE CASCADE);
INSERT INTO t1 (b) VALUES (100),(200),(300);
INSERT INTO t2 (a,b) VALUES (1,100),(2,200),(3,300);
# Insert a row in the foreign table which does not have parent row should fail
--error ER_NO_REFERENCED_ROW_2
INSERT INTO t2 (a,b) VALUES (4,400);
# Update a row in the foreign table which does not have parent row should fail
--error ER_NO_REFERENCED_ROW_2
UPDATE t2 SET b=500 WHERE a=2;
# Update a row in the referenced table which has child row should succeed and the row in the child table should also be updated
UPDATE t1 SET b=400 WHERE b=300;
# Delete a row in the referenced table which has child row should succeed and the row in the child table should also be deleted
DELETE FROM t1 WHERE b=200;
--sorted_result
SELECT * from t1;
--sorted_result
SELECT * from t2;
DROP TABLE t2;

# Try foreign key with cascade on delete and cascade on update
TRUNCATE TABLE t1;
CREATE TABLE t2 (a INT NOT NULL, b INT NOT NULL, FOREIGN KEY (b) REFERENCES t1(b) ON UPDATE CASCADE ON DELETE CASCADE);
INSERT INTO t1 (b) VALUES (100),(200),(300);
INSERT INTO t2 (a,b) VALUES (1,100),(2,200),(3,300),(4,300);
# Insert a row in the foreign table which does not have parent row should fail
--error ER_NO_REFERENCED_ROW_2
INSERT INTO t2 (a,b) VALUES (5,400);
# Update a row in the foreign table which does not have parent row should fail
--error ER_NO_REFERENCED_ROW_2
UPDATE t2 SET b=500 WHERE a=2;
# Update a row in the referenced table which has child row should succeed and the row in the child table should also be updated
UPDATE t1 SET b=400 WHERE b=300;
# Delete a row in the referenced table which has child row should succeed and the row in the child table should also be deleted
DELETE FROM t1 WHERE b=200;
--sorted_result
SELECT * from t1;
--sorted_result
SELECT * from t2;
DROP TABLE t2;

DROP TABLE t1;
